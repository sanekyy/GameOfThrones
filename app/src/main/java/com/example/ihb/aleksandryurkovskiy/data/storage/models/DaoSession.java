package com.example.ihb.aleksandryurkovskiy.data.storage.models;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.ihb.aleksandryurkovskiy.data.storage.models.Aliase;
import com.example.ihb.aleksandryurkovskiy.data.storage.models.Title;
import com.example.ihb.aleksandryurkovskiy.data.storage.models.Character;

import com.example.ihb.aleksandryurkovskiy.data.storage.models.AliaseDao;
import com.example.ihb.aleksandryurkovskiy.data.storage.models.TitleDao;
import com.example.ihb.aleksandryurkovskiy.data.storage.models.CharacterDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig aliaseDaoConfig;
    private final DaoConfig titleDaoConfig;
    private final DaoConfig characterDaoConfig;

    private final AliaseDao aliaseDao;
    private final TitleDao titleDao;
    private final CharacterDao characterDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        aliaseDaoConfig = daoConfigMap.get(AliaseDao.class).clone();
        aliaseDaoConfig.initIdentityScope(type);

        titleDaoConfig = daoConfigMap.get(TitleDao.class).clone();
        titleDaoConfig.initIdentityScope(type);

        characterDaoConfig = daoConfigMap.get(CharacterDao.class).clone();
        characterDaoConfig.initIdentityScope(type);

        aliaseDao = new AliaseDao(aliaseDaoConfig, this);
        titleDao = new TitleDao(titleDaoConfig, this);
        characterDao = new CharacterDao(characterDaoConfig, this);

        registerDao(Aliase.class, aliaseDao);
        registerDao(Title.class, titleDao);
        registerDao(Character.class, characterDao);
    }
    
    public void clear() {
        aliaseDaoConfig.getIdentityScope().clear();
        titleDaoConfig.getIdentityScope().clear();
        characterDaoConfig.getIdentityScope().clear();
    }

    public AliaseDao getAliaseDao() {
        return aliaseDao;
    }

    public TitleDao getTitleDao() {
        return titleDao;
    }

    public CharacterDao getCharacterDao() {
        return characterDao;
    }

}
