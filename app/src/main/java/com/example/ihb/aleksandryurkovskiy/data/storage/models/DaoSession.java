package com.example.ihb.aleksandryurkovskiy.data.storage.models;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.ihb.aleksandryurkovskiy.data.storage.models.Title;
import com.example.ihb.aleksandryurkovskiy.data.storage.models.Character;
import com.example.ihb.aleksandryurkovskiy.data.storage.models.Alias;

import com.example.ihb.aleksandryurkovskiy.data.storage.models.TitleDao;
import com.example.ihb.aleksandryurkovskiy.data.storage.models.CharacterDao;
import com.example.ihb.aleksandryurkovskiy.data.storage.models.AliasDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig titleDaoConfig;
    private final DaoConfig characterDaoConfig;
    private final DaoConfig aliasDaoConfig;

    private final TitleDao titleDao;
    private final CharacterDao characterDao;
    private final AliasDao aliasDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        titleDaoConfig = daoConfigMap.get(TitleDao.class).clone();
        titleDaoConfig.initIdentityScope(type);

        characterDaoConfig = daoConfigMap.get(CharacterDao.class).clone();
        characterDaoConfig.initIdentityScope(type);

        aliasDaoConfig = daoConfigMap.get(AliasDao.class).clone();
        aliasDaoConfig.initIdentityScope(type);

        titleDao = new TitleDao(titleDaoConfig, this);
        characterDao = new CharacterDao(characterDaoConfig, this);
        aliasDao = new AliasDao(aliasDaoConfig, this);

        registerDao(Title.class, titleDao);
        registerDao(Character.class, characterDao);
        registerDao(Alias.class, aliasDao);
    }
    
    public void clear() {
        titleDaoConfig.getIdentityScope().clear();
        characterDaoConfig.getIdentityScope().clear();
        aliasDaoConfig.getIdentityScope().clear();
    }

    public TitleDao getTitleDao() {
        return titleDao;
    }

    public CharacterDao getCharacterDao() {
        return characterDao;
    }

    public AliasDao getAliasDao() {
        return aliasDao;
    }

}
